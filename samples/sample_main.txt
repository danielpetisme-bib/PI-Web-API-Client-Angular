"use strict";
var _this = this;
exports.__esModule = true;
var angular_piwebapi_1 = require("angular-piwebapi");
startTest();
void {
    "this": .piWebApiHttpService.configureInstance("https://webserver.osisoft.com/piwebapi/", false, "username", "password"),
    "this": .piWebApiHttpService.home.get().subscribe(function (res) {
        console.log(res);
    }, function (error) {
        console.log(error.json());
    }),
    "this": .piWebApiHttpService.dataServer.getByPath('\\\\MARC-PI2016').subscribe(function (res) {
        console.log(res);
        var pointName = "SINUSOID_TEST74" + Math.trunc(100000 * Math.random());
        var newPoint = new angular_piwebapi_1.PIPoint(null, null, pointName, null, "Test PI Point for AngularJS PI Web API Client", "classic", "float32", null, null, null, false);
        _this.piWebApiHttpService.dataServer.createPoint(res.WebId, newPoint).subscribe(function (res) {
            console.log(res);
        }, function (error) {
            console.log(error.json());
        });
    }, function (error) {
        console.log(error.json());
    }),
    "this": .piWebApiHttpService.point.getByPath("\\\\MARC-PI2016\\sinusoid").subscribe(function (res) {
        console.log(res);
    }, function (error) {
        console.log(error.json());
    }),
    "var": point1webId = "P0QuorgJ0MskeiLb6TmEmH5gAQAAAATUFSQy1QSTIwMTZcU0lOVVNPSUQ",
    "var": point2webId = "P0QuorgJ0MskeiLb6TmEmH5gAgAAAATUFSQy1QSTIwMTZcU0lOVVNPSURV",
    "var": point3webId = "P0QuorgJ0MskeiLb6TmEmH5g9AQAAATUFSQy1QSTIwMTZcQ0RUMTU4",
    "var": webIds = [],
    webIds: .push(point1webId),
    webIds: .push(point2webId),
    webIds: .push(point3webId),
    "this": .piWebApiHttpService.streamSet.getRecordedAdHoc(webIds, null, "*", null, true, 1000, null, "*-3d", null).subscribe(function (res) {
        console.log(res);
    }, function (error) {
        console.log(error.json());
    }),
    let: streamValuesItems, PIItemsStreamValues: angular_piwebapi_1.PIItemsStreamValues,
    let: streamValue1, PIStreamValues: angular_piwebapi_1.PIStreamValues,
    let: streamValue2, PIStreamValues: angular_piwebapi_1.PIStreamValues,
    let: streamValue3, PIStreamValues: angular_piwebapi_1.PIStreamValues,
    let: value1, PITimedValue: angular_piwebapi_1.PITimedValue,
    let: value2, PITimedValue: angular_piwebapi_1.PITimedValue,
    let: value3, PITimedValue: angular_piwebapi_1.PITimedValue,
    let: value4, PITimedValue: angular_piwebapi_1.PITimedValue,
    let: value5, PITimedValue: angular_piwebapi_1.PITimedValue,
    let: value6, PITimedValue: angular_piwebapi_1.PITimedValue,
    value1: .Value = 2,
    value1: .Timestamp = "*-1d",
    value2: .Value = 3,
    value2: .Timestamp = "*-2d",
    value3: .Value = 4,
    value3: .Timestamp = "*-1d",
    value4: .Value = 5,
    value4: .Timestamp = "*-2d",
    value5: .Value = 6,
    value5: .Timestamp = "*-1d",
    value6: .Value = 7,
    value6: .Timestamp = "*-2d",
    streamValue1: .WebId = point1webId,
    streamValue2: .WebId = point2webId,
    streamValue3: .WebId = point3webId,
    "var": values1 = [],
    values1: .push(value1),
    values1: .push(value2),
    streamValue1: .Items = values1,
    "var": values2 = [],
    values2: .push(value3),
    values2: .push(value4),
    streamValue2: .Items = values2,
    "var": values3 = [],
    values3: .push(value5),
    values3: .push(value6),
    streamValue3: .Items = values3,
    "var": streamValues = [],
    streamValues: .push(streamValue1),
    streamValues: .push(streamValue2),
    streamValues: .push(streamValue3),
    "this": .piWebApiHttpService.streamSet.updateValuesAdHoc(streamValues, null, null).subscribe(function (res) {
        console.log(res);
    }, function (error) {
        console.log(error.json());
    }),
    "var": pirequest = {},
    pirequest: (_a = {
        "Method": "GET",
        "Resource": "https://marc-web-sql.marc.net/piwebapi/points?path=\\\\MARC-PI2016\\sinusoid",
        "Headers": {
            "Cache-Control": "no-cache"
        }
    }, "4" = _a[0], _a),
    pirequest: (_b = {
        "Method": "GET",
        "Resource": "https://marc-web-sql.marc.net/piwebapi/points?path=\\\\MARC-PI2016\\cdt158",
        "Headers": {
            "Cache-Control": "no-cache"
        }
    }, "5" = _b[0], _b),
    pirequest: (_c = {
        "Method": "GET",
        "Resource": "https://marc-web-sql.marc.net/piwebapi/streamsets/value?webid={0}&webid={1}",
        "Parameters": [
            "$.4.Content.WebId",
            "$.5.Content.WebId"
        ],
        "ParentIds": [
            "4",
            "5"
        ]
    }, "6" = _c[0], _c),
    "this": .piWebApiHttpService.batch.execute(pirequest).subscribe(function (res) {
        console.log(res);
    }, function (error) {
        console.log(error.json());
    })
};
var _a, _b, _c;
